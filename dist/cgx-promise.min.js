var Promise=function(){this._t=[],this._c=[],this._o={}},P=Promise.prototype;P.resolve=function(){var t=arguments,h=this;try{for(var r=0,c=h._t.length;r<c;r++)t=[h._t[r].apply(h._o,t)]}catch(t){if(!h._c.length)throw t;h.reject(t)}},P.reject=function(t){for(var h=0,r=this,c=r._c.length;h<c;h++)r._c[h].call(r._o,t)},P.then=function(t){return this._t.push(t),this},P.catch=function(t){return this._c.push(t),this};